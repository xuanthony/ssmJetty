<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
       http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd">

    <!-- 启动Spring MVC的注解功能，完成请求和注解POJO的映射 -->
    <mvc:annotation-driven />

    <!-- 静态资源(js、image等)的访问 -->
    <mvc:default-servlet-handler/>

    <!-- 使用注解的包，包括子集 -->
    <context:component-scan base-package="com.sky.controller" />

    <!-- 解决js,css,images访问不到的问题-->
    <!--<mvc:resources mapping="/static/js/**" location="/static/js/" />-->
    <!--<mvc:resources mapping="/static/css/**" location="/static/css/" />-->
    <!--<mvc:resources mapping="/static/images/**" location="/static/images/" />-->
    <!--<mvc:resources mapping="/static/template/**" location="/static/template/" />-->

    <!-- 文件上传配置注意:这里申明的id必须为multipartResolver -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize" value="500000"/>
    </bean>

    <!-- 简单的异常处理 -->
    <bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <property name="exceptionMappings">
            <props>
                <!-- 映射目录为/WEB-INF/jsp/error/upload_error.jsp -->
                <prop key="org.springframework.web.multipart.MaxUploadSizeExceededException">/error/upload_error</prop>
            </props>
        </property>
    </bean>

    <!-- freemarker配置资源文件引入-->
    <bean id="freemarkerConfiguration"
          class="org.springframework.beans.factory.config.PropertiesFactoryBean">
        <property name="location" value="classpath:config/freemarker.properties" />
    </bean>

    <!-- 配置freeMarker的模板路径 -->
    <bean id="freemarkerConfig" class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
        <property name="templateLoaderPath">
            <value>/WEB-INF/views/</value>
        </property>
        <property name="freemarkerVariables">
            <map>
                <entry key="xml_escape" value-ref="fmXmlEscape"/>
            </map>
        </property>
        <property name="freemarkerSettings" ref="freemarkerConfiguration"></property>
    </bean>

    <bean id="fmXmlEscape" class="freemarker.template.utility.XmlEscape"/>

    <!-- 针对freemarker的视图解析器配置 -->
    <!--<bean id="viewResolver" class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">-->
        <!--<property name="cache" value="true" />-->
        <!--<property name="prefix" value="" />-->
        <!--<property name="suffix" value=".ftl" />-->
        <!--<property name="viewClass">-->
            <!--<value>org.springframework.web.servlet.view.freemarker.FreeMarkerView-->
            <!--</value>-->
        <!--</property>-->
        <!--<property name="contentType" value="text/html;charset=UTF-8"></property>-->
        <!--&lt;!&ndash; 在ftl页面中使用request.contextPath就可以获得contextPath&ndash;&gt;-->
        <!--<property name="requestContextAttribute" value="request" />-->
        <!--&lt;!&ndash; 使用这些宏，必须设置FreeMarkerViewResolver的exposeMacroHelpers属性为true &ndash;&gt;-->
        <!--<property name="exposeSpringMacroHelpers" value="true" />-->
        <!--&lt;!&ndash; 将请求和会话属性作为变量暴露给freemaker模板使用&ndash;&gt;-->
        <!--<property name="exposeRequestAttributes" value="true" />-->
        <!--<property name="exposeSessionAttributes" value="true" />-->
    <!--</bean>-->

    <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
        <property name="prefix" value="/WEB-INF/pages/"/>
        <property name="suffix" value=".jsp"/>
    </bean>
</beans>